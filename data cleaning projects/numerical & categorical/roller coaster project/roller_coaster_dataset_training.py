# -*- coding: utf-8 -*-
"""roller_coaster_dataset_training.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1MKTUrBqroHlGRG6R9mHaPAhq8WMdSY_T
"""

from google.colab import drive
drive.mount('/content/drive')

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.preprocessing import LabelEncoder
from sklearn.preprocessing import StandardScaler
from sklearn.impute import KNNImputer
import seaborn as sns

ds = pd.read_csv('/content/drive/MyDrive/Data sets/coasters.csv')
df = pd.DataFrame(ds)

df.tail(20)

df.columns

df.info()
df.describe()

df.isna().sum()

df.dropna(inplace=True, subset=['Inversions'])
df.drop(columns=['Drop', 'Crossings', 'Airtime Points', 'Bank Angle (°)',
                 'Δ Elevation (ft)', 'Downhill Length (ft)', 'Uphill Length (ft)',
                 'Vertical Angle (°)', 'G-Force', 'Duration', 'Drop (ft)'], inplace=True)
df.reset_index(drop=True, inplace=True)
df.isna().sum()

df['Length (ft)'] = pd.to_numeric(df['Length (ft)'], errors='coerce')
df['Opened'].replace('unknown',np.nan, inplace=True)
df.tail(10)

df_copy = df.copy()
label_encoder = LabelEncoder()

for col in ['Type', 'Design', 'Status', 'Make']:
    df_copy[col + '_Label_Encoded'] = label_encoder.fit_transform(df_copy[col])
    df_copy.drop(columns=[col], inplace=True)


df_copy['Opened'] = pd.to_datetime(df_copy['Opened'], format='mixed')
df_copy['Opened_Year'] = df_copy['Opened'].dt.year
df_copy['Opened_Month'] = df_copy['Opened'].dt.month
df_copy['Opened_Day'] = df_copy['Opened'].dt.day
df_copy.drop(columns=['Opened'], inplace=True)
df_copy['Opened_Year'] = pd.to_numeric(df_copy['Opened_Year'])
df_copy['Opened_Month'] = pd.to_numeric(df_copy['Opened_Month'])
df_copy['Opened_Day'] = pd.to_numeric(df_copy['Opened_Day'])

df_copy.tail(10)

scaler = StandardScaler()
df_scaled = scaler.fit_transform(df_copy[['Length (ft)','Height (ft)', 'Speed (mph)', 'Inversions',
       'Type_Label_Encoded', 'Design_Label_Encoded', 'Status_Label_Encoded',
       'Make_Label_Encoded', 'Opened_Year', 'Opened_Month', 'Opened_Day']])
print(df_scaled)

imputer = KNNImputer(n_neighbors=3)

df_imputed = imputer.fit_transform(df_scaled)

df_imputed = scaler.inverse_transform(df_imputed)

df_columns = ['Length (ft)','Height (ft)', 'Speed (mph)', 'Inversions',
       'Type_Label_Encoded', 'Design_Label_Encoded', 'Status_Label_Encoded',
       'Make_Label_Encoded', 'Opened_Year', 'Opened_Month', 'Opened_Day']
df_imputed = pd.DataFrame(df_imputed, columns=df_columns)
df_imputed.tail(10)

df_imputed[['Type_Label_Encoded', 'Design_Label_Encoded',
            'Status_Label_Encoded','Make_Label_Encoded',
            'Opened_Year', 'Opened_Month', 'Opened_Day']] = df_imputed[['Type_Label_Encoded', 'Design_Label_Encoded',
                        'Status_Label_Encoded','Make_Label_Encoded',
                        'Opened_Year', 'Opened_Month', 'Opened_Day']].round().astype(int)

df_to_ans = df_imputed.copy()

for col in ['Type', 'Design', 'Status','Make']:
    df_imputed[col] = label_encoder.inverse_transform(df_imputed[col + '_Label_Encoded'])
    df_imputed.drop(columns=[col + '_Label_Encoded'], inplace=True)

df_imputed.join(df[['Name', 'Amusement Park', 'City', 'Region', 'Country', 'Elements']])

df_imputed.rename(columns={
    'Opened_Year': 'year',
    'Opened_Month': 'month',
    'Opened_Day': 'day'
}, inplace=True)

df_imputed['Opened'] = pd.to_datetime(df_imputed[['year', 'month', 'day']])

df_imputed.drop(columns=['year', 'month', 'day'], inplace=True)

df = df_imputed.copy()
df.tail(10)

df.duplicated().sum()

df.drop_duplicates(inplace=True)
df.duplicated().sum()

df_to_ans.drop_duplicates(inplace=True)
df_to_ans.duplicated().sum()

df_to_ans.info()

fig, axes = plt.subplots(nrows=4, ncols=3, figsize=(15, 15))

for i, column in enumerate(df_to_ans.columns):
    row = int(i / 3)
    col = i % 3
    df_to_ans.boxplot(column=[column], ax=axes[row, col])
    axes[row, col].set_title(column)

plt.tight_layout()
plt.show()

df_to_ans = df_to_ans[df_to_ans['Height (ft)'] <= 300]
df_to_ans = df_to_ans[df_to_ans['Speed (mph)'] <= 105]
df_to_ans = df_to_ans[df_to_ans['Inversions'] <= 10]
df_to_ans = df_to_ans[df_to_ans['Opened_Year'] >= 1875]
df_to_ans.reset_index(drop=True, inplace=True)
df_to_ans.info()

df_to_ans.to_csv('/content/drive/MyDrive/Data sets/coasters_cleaned.csv', index=False)

df_corr = df_to_ans.corr()
sns.heatmap(df_corr,annot=True)